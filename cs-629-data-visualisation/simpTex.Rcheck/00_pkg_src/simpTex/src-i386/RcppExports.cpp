// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// CreateTexture2D
int CreateTexture2D(const char* szFormat, int iWidth, int iHeight);
RcppExport SEXP _simpTex_CreateTexture2D(SEXP szFormatSEXP, SEXP iWidthSEXP, SEXP iHeightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type szFormat(szFormatSEXP);
    Rcpp::traits::input_parameter< int >::type iWidth(iWidthSEXP);
    Rcpp::traits::input_parameter< int >::type iHeight(iHeightSEXP);
    rcpp_result_gen = Rcpp::wrap(CreateTexture2D(szFormat, iWidth, iHeight));
    return rcpp_result_gen;
END_RCPP
}
// CreateTextureOnImage2D
int CreateTextureOnImage2D(const char* szFormat, const char* szPNGFile);
RcppExport SEXP _simpTex_CreateTextureOnImage2D(SEXP szFormatSEXP, SEXP szPNGFileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type szFormat(szFormatSEXP);
    Rcpp::traits::input_parameter< const char* >::type szPNGFile(szPNGFileSEXP);
    rcpp_result_gen = Rcpp::wrap(CreateTextureOnImage2D(szFormat, szPNGFile));
    return rcpp_result_gen;
END_RCPP
}
// SaveTextureToFile
bool SaveTextureToFile(int iTextureID, const char* szFile);
RcppExport SEXP _simpTex_SaveTextureToFile(SEXP iTextureIDSEXP, SEXP szFileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iTextureID(iTextureIDSEXP);
    Rcpp::traits::input_parameter< const char* >::type szFile(szFileSEXP);
    rcpp_result_gen = Rcpp::wrap(SaveTextureToFile(iTextureID, szFile));
    return rcpp_result_gen;
END_RCPP
}
// Generate_SimplexNoise
bool Generate_SimplexNoise(int iTextureID, float fNoiseResolution, float fNoiseIntensity);
RcppExport SEXP _simpTex_Generate_SimplexNoise(SEXP iTextureIDSEXP, SEXP fNoiseResolutionSEXP, SEXP fNoiseIntensitySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iTextureID(iTextureIDSEXP);
    Rcpp::traits::input_parameter< float >::type fNoiseResolution(fNoiseResolutionSEXP);
    Rcpp::traits::input_parameter< float >::type fNoiseIntensity(fNoiseIntensitySEXP);
    rcpp_result_gen = Rcpp::wrap(Generate_SimplexNoise(iTextureID, fNoiseResolution, fNoiseIntensity));
    return rcpp_result_gen;
END_RCPP
}
// Generate_PerlinNoise
bool Generate_PerlinNoise(int iTextureID, float fNoiseResolution, float fNoiseIntensity);
RcppExport SEXP _simpTex_Generate_PerlinNoise(SEXP iTextureIDSEXP, SEXP fNoiseResolutionSEXP, SEXP fNoiseIntensitySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iTextureID(iTextureIDSEXP);
    Rcpp::traits::input_parameter< float >::type fNoiseResolution(fNoiseResolutionSEXP);
    Rcpp::traits::input_parameter< float >::type fNoiseIntensity(fNoiseIntensitySEXP);
    rcpp_result_gen = Rcpp::wrap(Generate_PerlinNoise(iTextureID, fNoiseResolution, fNoiseIntensity));
    return rcpp_result_gen;
END_RCPP
}
// Generate_WorleyNoise
bool Generate_WorleyNoise(int iTextureID, int iPoints, float fNoiseIntensity, const char* szColorFunc, const char* szDistanceFunc);
RcppExport SEXP _simpTex_Generate_WorleyNoise(SEXP iTextureIDSEXP, SEXP iPointsSEXP, SEXP fNoiseIntensitySEXP, SEXP szColorFuncSEXP, SEXP szDistanceFuncSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iTextureID(iTextureIDSEXP);
    Rcpp::traits::input_parameter< int >::type iPoints(iPointsSEXP);
    Rcpp::traits::input_parameter< float >::type fNoiseIntensity(fNoiseIntensitySEXP);
    Rcpp::traits::input_parameter< const char* >::type szColorFunc(szColorFuncSEXP);
    Rcpp::traits::input_parameter< const char* >::type szDistanceFunc(szDistanceFuncSEXP);
    rcpp_result_gen = Rcpp::wrap(Generate_WorleyNoise(iTextureID, iPoints, fNoiseIntensity, szColorFunc, szDistanceFunc));
    return rcpp_result_gen;
END_RCPP
}
// Generate_ReactionDiffusion
bool Generate_ReactionDiffusion(int iTextureID, int iIterations, int iSpawnPoints);
RcppExport SEXP _simpTex_Generate_ReactionDiffusion(SEXP iTextureIDSEXP, SEXP iIterationsSEXP, SEXP iSpawnPointsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iTextureID(iTextureIDSEXP);
    Rcpp::traits::input_parameter< int >::type iIterations(iIterationsSEXP);
    Rcpp::traits::input_parameter< int >::type iSpawnPoints(iSpawnPointsSEXP);
    rcpp_result_gen = Rcpp::wrap(Generate_ReactionDiffusion(iTextureID, iIterations, iSpawnPoints));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_simpTex_CreateTexture2D", (DL_FUNC) &_simpTex_CreateTexture2D, 3},
    {"_simpTex_CreateTextureOnImage2D", (DL_FUNC) &_simpTex_CreateTextureOnImage2D, 2},
    {"_simpTex_SaveTextureToFile", (DL_FUNC) &_simpTex_SaveTextureToFile, 2},
    {"_simpTex_Generate_SimplexNoise", (DL_FUNC) &_simpTex_Generate_SimplexNoise, 3},
    {"_simpTex_Generate_PerlinNoise", (DL_FUNC) &_simpTex_Generate_PerlinNoise, 3},
    {"_simpTex_Generate_WorleyNoise", (DL_FUNC) &_simpTex_Generate_WorleyNoise, 5},
    {"_simpTex_Generate_ReactionDiffusion", (DL_FUNC) &_simpTex_Generate_ReactionDiffusion, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_simpTex(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
