TestNoiseLibrary()
int iCreatedPNG = CreateTexture2D("RGBA32", 1000, 512);
Generate_PerlinNoise(iCreatedPNG, 999.0f, 1.0f);
//Generate_PerlinNoise(iCreatedPNG, 1450.0f, 0.3f);
SaveTextureToFile(iCreatedPNG, "d:/Perlin.png");
build
(install.packages(‘devtools’))
install.packages('devtools')
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
install.packages("jsonlite", type = "source")
build()
build
Sys.which("make")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
library(simpTex)
simpTex
runTest
library(simpTex)
runtTest
simpTex::runTest
simpTex::runTest()
runTest <- function() {
.Call(`_simpTex_runTest`)
}
import Rcpp
import(Rcpp)
library(Rcpp)
library(simpText)
library(simpTex)
runTest()
library(simpTex)
library(Rcpp)
runTest()
runTest
runTest
library(simpTex)
library(simpTex)
library(Rcpp)
runTest
library(simpTex)
runTest()
library(Rcpp)
runTest()
runTest()
int iCreatedPNG = CreateTexture2D("RGBA32", 1000, 512);
val <- CreateTexture2D("RGBA32", 1000, 512);
library(simpTex)
library(Rcpp)
library(simpTex)
library(simpTex)
library(Rcpp)
runTest
CreateTexture2D("RGBA32", 1000, 512);
CreateTexture2D("RGBA32", 1000, 512);
simpTex::CreateTexture2D("RGBA32", 1000, 512)
library(simpTex)
library(Rcpp)
CreateTexture2D("RGBA32", 1000, 512);
simpTex::CreateTexture2D("RGBA32", 1000, 512);
library(simpTex)
help(simpText)
??simpText
??simpTex
img= CreateTexture2D('RGBA32',1000,500)
img= simpTex::CreateTexture2D('RGBA32',1000,500)
install.packages("simpTex")
install.packages("simpTex")
library(simpTex)
library(simpTex)
library(simpTex)
img= simpTex::CreateTexture2D('RGBA32',1000,500)
img=CreateTexture2D('RGBA32',1000,500)
library(simpTex)
library(simpTex)
